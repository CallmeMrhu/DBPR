1、MovieLen数据集中的数据，每个用户的打分时间过于集中，时间跨度不够大。
    如果使用timestamp进行划分会导致打分较早的用户在测试集中没有数据；
    而打分较迟的用户会在训练集中没有数据，出现冷启动问题。

2、使用Last-FM数据集，按照timestamp进行划分，不能按照之前处理MovieLen时直接取用户的前80%数据

3、在计算t时间段时，可以直接使用timestamp来进行划分
    其中划分方式可以采用pandas中的dataframe中对某一列进行过滤的方法，
        对下界timestamp加上时间间隔所转换成的timestamp值，则可以得到上界，
            于是就可以直接过滤得到所需要的数据，同理对各个时间段都可以采用相同的方法进行划分。

user_000001	2009-04-10T16:05:12Z	463a94f1-2713-40b1-9c88-dcc9c0170cae	Minus 8	f78c95a8-9256-4757-9a9f-213df5c6854e	Cold Fusion

user_000001                                 1
2009-04-10T16:05:12Z                        timestamp
f78c95a8-9256-4757-9a9f-213df5c6854e        traid

对时间序列的操作：
1、过滤掉user、item、timestamp为空的行
1、对过滤空行的数据集继续进行清理，其中将user_id用连续自然数表示，在music_id也用连续自然数表示，timestamp转换为用秒表示
2、先按照时间划分得到多个dataframe，当然不同的时间划分得到的dataframe的时间个数也不一样
3、第一个时间段t计算梯度时，上一个时间段的值可以用初始化的值表示，初始化为多少得思考
4、非第一个时间段t计算提督，需要用到上一个时间段的值时，则说明上一个时间段的Pu和Qi矩阵得单独保存一份。


t=0 419805
t=1 955470
t=2 1985952
t=3 2483596
t=4 2606951
t=5 2666297
sum 11118071
time interval : 1.5 years
validation/test : 1.5 years

Standard-BPR: step time
0 step :1411
1 step :1386
2 step :1496
3 step :1469
4 step :2639
5 step :1682
6 step :1378
7 step :1407
8 step :1413
9 step :1439
10 step :1449
11 step :1451
12 step :1423


DBPR: step time
0 step :2702
1 step :2871
2 step :4032
3 step :2941
4 step :2782
5 step :2855
6 step :5860